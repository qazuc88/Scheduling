<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- If find annotation like @Component @Controller @Service @Repository, 
		register a bean for this class -->
		

	<context:component-scan
		base-package="com.paiban.Domain.Repository.*;com.util.shiro.realm.*;com.paiban.*;com.paiban.Application.*;com.paiban.Application.Implementation.*;" />

	<!-- declares support for general annotations such as @Required, @Autowired, 
		@PostConstruct, and so on -->
	<context:annotation-config />


	<!-- eclares explicit support for annotation-driven MVC controllers (i.e. 
		@RequestMapping, @Controller, although support for those is the default behaviour), 
		as well as adding support for declrative validation via @Valid and message 
		body marshalling with @RequestBody/ResponseBody -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String"
									value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- When ModelAndView mv = new ModelAndView("index"). it will find WEB-INF/page/index.jsp -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources location="/content/" mapping="/content/**" />
<!-- shiro权限切面设置 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- shiro权限切面设置 -->
</beans>
    